name: Manual CD Pipeline with Approval

on:
  workflow_dispatch:

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

#      - name: Run backend tests
#        run: npm test
#        working-directory: ./backend

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

 #     - name: Run frontend tests
 #       run: npm test
 #       working-directory: ./frontend

  build:
    name: Build Docker Images
    needs: ci
    runs-on: ubuntu-latest
    outputs:
      backend-image-tag: ${{ steps.build-backend.outputs.tags }}
      frontend-image-tag: ${{ steps.build-frontend.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        id: build-backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKOCKER_USERNAME }}/multitenant-supabase-auth:${{ github.sha }}

      - name: Build and push frontend image
        id: build-frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/multitenant-supabase-auth:${{ github.sha }}

  deploy:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://your-app-url.com # Optional: URL to the deployed environment
    steps:
      - name: Deploy to target
        # This step will only run after an authorized user approves the deployment.
        # Add your deployment commands here.
        # For example, using kubectl, docker-compose, or ssh.
        run: |
          echo "Deploying backend image: ${{ needs.build.outputs.backend-image-tag }}"
          echo "Deploying frontend image: ${{ needs.build.outputs.frontend-image-tag }}"
          echo "Deployment commands go here..."
